apiVersion: v1
kind: PersistentVolume
metadata:
  name: task-pv-volume
spec:
  storageClassName: nodestorage
  capacity:
    storage: 10Gi
  accessModes:
      - ReadWriteOnce
  hostPath:
      path: /mnt/data

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: task-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
    # we need to map pv with pvc so that pod can use the claim.
  storageClassName: nodestorage #this is the name of the storage or resource provision by persistent volume
  resources:
    requests:
      storage: 10Gi
      
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: emart-dbcreation-script
data:
  mysql_usermgmt.sql: |
    DROP DATABASE IF EXISTS webappdb;
    CREATE DATABASE webappdb;
    
---
apiVersion: v1
kind: Secret
metadata:
  name: my-db-secret
type: Opaque
data:
  db-password: ZGJwYXNzd29yZDEx
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: myapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      name: myapp-mysql
      labels:
        app: mysql
    spec:
        containers:
          - name: mysql
            image: mysql:5.6
            env:
              - name: MYSQL_ROOT_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: my-db-secret
                    key: db-password
            ports:
              - containerPort: 3306
                name: mysql
            volumeMounts:
            - name: mysql-persistent-volume
              mountPath: /var/lib/mysql
            - name: emart-dbscript
              mountPath: /docker-entrypoint-initdb.d
        volumes:
          - name: mysql-persistent-volume
            persistentVolumeClaim:
              claimName: task-pv-claim
          - name: emart-dbscript
            configMap:
              name: emart-dbcreation-script
              
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  selector:
    app: mysql
  ports:
    - port: 3306
  clusterIP: None
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emart-webapp
  labels:
    app: emart-webapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: emart-webapp
  template:
    metadata:
      name: emart-webapp
      labels:
        app: emart-webapp
    spec:
        containers:
          - name: emart-webapp
            image: santhakumari94/emart-app-repo

            ports:
              - containerPort: 8080
                name: mysql
            env:
              - name: DB_HOSTNAME
                value: mysql
              - name: DB_PORT
                value: "3306"
              - name: DB_NAME
                value: "webappdb"
              - name: DB_USERNAME
                value: "root"
              - name: DB_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: my-db-secret
                    key: db-password
                    
---
apiVersion: v1
kind: Service
metadata:
  name: myapp-service
spec:
  type: LoadBalancer
  selector:
    app: emart-webapp
  ports:
  - port: 80
    targetPort: 9090
